step 1: create iterface with the name IDbInitializer
public interface IDbInitializer
    {
        void Initialize();
    }
  
step 2: create class with the name DbInitializer
public class DbInitializer : IDbInitializer
    {
        private readonly ApplicationDbContext _context;
        private readonly UserManager<AppUser> _userManager;
        private readonly RoleManager<IdentityRole> _roleManager;
        public DbInitializer(ApplicationDbContext context,
                               UserManager<AppUser> userManager,
                               RoleManager<IdentityRole> roleManager)
        {
            _context = context;
            _userManager = userManager;
            _roleManager = roleManager;
        }
        public void Initialize()
        {
            if (!_roleManager.RoleExistsAsync(WebsiteRoles.WebsiteAdmin).GetAwaiter().GetResult())
            {
                _roleManager.CreateAsync(new IdentityRole(WebsiteRoles.WebsiteAdmin)).GetAwaiter().GetResult();
                _roleManager.CreateAsync(new IdentityRole(WebsiteRoles.WebsiteAuthor)).GetAwaiter().GetResult();
                _userManager.CreateAsync(new AppUser()
                {
                    UserName = "jeme1980@hotmail.com",
                    Email = "jeme1980@hotmail.com",
                    FirstName = "jamal",
                    LastName = "khalaily"
                }, "1234").Wait();

                var appUser = _context.AppUsers?.FirstOrDefault(x => x.Email == "jeme1980@hotmail.com");
                if (appUser != null)
                {
                    _userManager.AddToRoleAsync(appUser, WebsiteRoles.WebsiteAdmin).GetAwaiter().GetResult();
                }
            }
        }
    }
    
    step 3: go to program file and add service
    builder.Services.AddScoped<IDbInitializer, DbInitializer>();
    
    step 4: after var app = builder.Build(); add:
    DataSeeding();
    
    step 5: after app.Run(); add:

void DataSeeding()
{
    using (var scope = app.Services.CreateScope())
    {
        var DbInitialize = scope.ServiceProvider.GetRequiredService<IDbInitializer>();
        DbInitialize.Initialize();
    }
}
